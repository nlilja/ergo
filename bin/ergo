#!/usr/bin/python
# -*- coding: utf-8 -*-


"""
ERGO - Anarchy Online chat bot
"""


import logging
import logging.handlers
import sys
import threading
import yaml

from aochat import Chat, ChatError


class Worker(threading.Thread):
    """
    Worker.
    """
    
    def __init__(self, username, password, host, port, character, dimension_name):
        threading.Thread.__init__(self)
        
        # Handlers
        self.name      = "%s, %s" % (character, dimension_name,)
        self.log       = logging.getLogger("ergo")
        
        # AO chat connection options
        self.username  = username
        self.password  = password
        self.host      = host
        self.port      = port
        self.character = character
    
    def run(self):
        while True:
            try:
                # Connect to dimension
                chat = Chat(self.username, self.password, self.host, self.port)
                
                # Select character by name
                for character in chat.characters:
                    if character.name == self.character:
                        break
                else:
                    self.log.critical("Unknown character '%s'" % self.character)
                    break
                
                # Check if online
                if character.online:
                    self.log.critical("Character '%s' is online" % character.name)
                    break
                
                # Login and listen chat
                chat.login(character.id)
                chat.start(self.callback)
            except ChatError, error:
                self.log.error(error)
                continue
            except SystemExit:
                break
            except Exception, error:
                self.log.exception(error)
                continue
    
    def callback(self, chat, packet):
        # Log incoming packets
        self.log.debug(repr(packet))
        
        # TODO: ...


def main(argv = []):
    """
    Launcher.
    """
    
    # Read settings
    config = yaml.load(file("/usr/local/etc/ergo.conf", "rb"))
    
    # Init logger
    log_format = logging.Formatter("[%(asctime)s] %(threadName)s: %(message)s", "%Y-%m-%d %H:%M:%S %Z")
    
    log_handler = logging.FileHandler(config["general"]["log_filename"]) if config["general"]["log_filename"] else logging.StreamHandler(sys.stdout)
    log_handler.setLevel(logging.DEBUG)
    log_handler.setFormatter(log_format)
    
    log_smtp_handler = logging.handlers.SMTPHandler(
        mailhost    = (config["general"]["smtp_host"], config["general"]["smtp_port"],),
        credentials = (config["general"]["smtp_username"], config["general"]["smtp_password"],),
        fromaddr    = config["general"]["smtp_from"],
        toaddrs     = config["general"]["smtp_to"],
        subject     = "Occurrence of an error",
    )
    log_smtp_handler.setLevel(logging.CRITICAL)
    log_smtp_handler.setFormatter(log_format)
    
    log = logging.getLogger("ergo")
    log.setLevel(logging.getLevelName(config["general"]["log_level"].upper()))
    log.addHandler(log_handler)
    log.addHandler(log_smtp_handler)
    
    # Start workers
    workers = []
    
    for account in config["ao"]["accounts"]:
        worker = Worker(
            username       = account["username"],
            password       = account["password"],
            host           = account["dimension"]["host"],
            port           = account["dimension"]["port"],
            dimension_name = account["dimension"]["name"],
            character      = account["character"],
        )
        
        worker.start()
        workers.append(worker)
    
    for worker in workers:
        worker.join()
    
    return 0


if __name__ == "__main__":
    status = main(sys.argv[1:])
    sys.exit(status)
